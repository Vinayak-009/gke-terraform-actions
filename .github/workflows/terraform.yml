name: Deploy to GKE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'
        project_id: ${{ secrets.GCP_PROJECT }}

    - name: Install gke-gcloud-auth-plugin
      run: |
        sudo apt-get update
        gcloud components install gke-gcloud-auth-plugin

    - name: Check if GKE Cluster Exists
      id: check-cluster
      run: |
        CLUSTER_NAME="kube-cluster"
        ZONE="us-central1-c"
        if gcloud container clusters describe $CLUSTER_NAME --zone $ZONE > /dev/null 2>&1; then
          echo "CLUSTER_EXISTS=true" >> $GITHUB_ENV
        else
          echo "CLUSTER_EXISTS=false" >> $GITHUB_ENV
        fi

    - name: Initialize Terraform
      run: terraform init
      working-directory: terraform/

    - name: Apply Terraform (Cluster Creation)
      if: env.CLUSTER_EXISTS == 'false'
      run: terraform apply -auto-approve
      working-directory: terraform/

    - name: Get Cluster Credentials
      if: env.CLUSTER_EXISTS == 'true'
      run: |
        gcloud container clusters get-credentials kube-cluster --zone us-central1-c
        echo "export KUBECONFIG=${{ github.workspace }}/kubeconfig" >> $GITHUB_ENV

    - name: Export KUBECONFIG Path
      if: env.CLUSTER_EXISTS == 'false'
      run: echo "export KUBECONFIG=${{ github.workspace }}/kubeconfig" >> $GITHUB_ENV

    - name: Configure Kubeconfig for Terraform
      if: env.CLUSTER_EXISTS == 'false'
      run: |
        terraform output -raw kubeconfig > ${{ github.workspace }}/kubeconfig
      working-directory: terraform/

    - name: Deploy application
      run: |
        kubectl apply -f k8s/pre-ingress.yaml
        kubectl apply -f k8s/hpa.yaml
      env:
        KUBECONFIG: ${{ env.KUBECONFIG }}

    - name: Verify deployment
      run: kubectl get pods
      env:
        KUBECONFIG: ${{ env.KUBECONFIG }}
